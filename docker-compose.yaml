
services:
  # 1. BACKEND (Node.js + Python)
  backend:
    container_name: mi-backend
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      # Expone el puerto 3000 de tu app
      - "4000:3000"
    depends_on:
      - postgres-db
    networks:
      - app-network
    command: sh -c "npx prisma migrate deploy --schema=./infraestructura/backend/prisma/schema.prisma && npx prisma generate --schema=./infraestructura/backend/prisma/schema.prisma && node dist/infraestructura/backend/main.js"
    restart: unless-stopped
  # 2. FRONTEND (React + Nginx)
  frontend:
    container_name: mi-frontend
    build:
      context: ./infraestructura/frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  # 3. BASE DE DATOS POSTGRES
  postgres-db:
    container_name: postgres-db
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped



  # 5. ADMIN DE BBDD (Opcional)
  adminer:
    container_name: db-adminer
    image: adminer
    ports:
      - "8081:8080"
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres-data:

networks:
  app-network: